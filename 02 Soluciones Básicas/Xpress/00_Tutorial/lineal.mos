model lineal 		! es el nombre que le vamos a dar al modelo
uses "mmxprs", "mmsystem"
!uses "mmsheet" !incluye librerias de excel

declarations
	n: integer 		! n es el numero de variables
	m: integer 		! m es el numero de ecuaciones
	Max: integer 	!
	Rmenor: integer
	Rmayor: integer
	Rigual: integer
end-declarations

initializations from "datos.txt" 	! De que archivo vamos a inicializar
	n m Max Rmenor Rmayor Rigual
  ! n m son los del archivo
end-initializations

declarations
	N=1..n
	M=1..m
	c: array(N) of real				! C es el vector de coeficientes de la funcion objetivo
	x: array(N) of mpvar			! x es el vector de variables de la funcion objetivo
	A: array(M,N) of real			! A es la matriz de coeficientes de las ecuaciones de las restricciones
	b: array(M) of real 			! b es el vector de coeficientes del resultado de las restricicones
	inecuaciones: array(M) of real
end-declarations

initializations from "datos.txt" 	! permite acceder al docuemento datos de excel
	c A b inecuaciones
end-initializations

! Definicion de la funcicion objetivo
z:=sum(i in N) c(i)*x(i) 			! z es la funcion objetivo

! Definicion de las restricciones
forall(i in M)
if(inecuaciones(i)=1) then
	sum(j in N) A(i,j)*x(j) >= b(i)

elif(inecuaciones(i)=0) then
	sum(j in N) A(i,j)*x(j) = b(i)

elif(inecuaciones(i)=-1) then
	sum(j in N) A(i,j)*x(j) <= b(i)
end-if


if(Max = 1)then
	maximize(z)
elif(Max = 0)then
	minimize(z)
end-if


writeln("El valor de la funcion objetivo es: ", getobjval)
writeln(" ")

forall(i in N)
	writeln("El valor de la variable x(", i,") es ", getsol(x(i)))
end-model